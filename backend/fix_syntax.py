#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
"""

import re
from pathlib import Path


def fix_syntax_errors(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–∞–π–ª–µ"""
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    fixed_content = content
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º += –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+\+\s*=\s*', r'\1 += ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º *= –æ—à–∏–±–∫–∏  
    fixed_content = re.sub(r'(\w+)\s+\*\s*=\s*', r'\1 *= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º -= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+-\s*=\s*', r'\1 -= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º /= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+/\s*=\s*', r'\1 /= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º //= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+//\s*=\s*', r'\1 //= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º %= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+%\s*=\s*', r'\1 %= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º **= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+\*\*\s*=\s*', r'\1 **= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º &= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+&\s*=\s*', r'\1 &= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º |= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+\|\s*=\s*', r'\1 |= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ^= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+\^\s*=\s*', r'\1 ^= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º <<= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+<<\s*=\s*', r'\1 <<= ', fixed_content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º >>= –æ—à–∏–±–∫–∏
    fixed_content = re.sub(r'(\w+)\s+>>\s*=\s*', r'\1 >>= ', fixed_content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    if fixed_content != content:
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(fixed_content)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {file_path}")
        return True
    
    return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app_dir = Path("app")
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Python —Ñ–∞–π–ª—ã
    python_files = list(app_dir.rglob("*.py"))
    
    print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ {len(python_files)} —Ñ–∞–π–ª–∞—Ö...")
    
    fixed_count = 0
    for file_path in python_files:
        try:
            if fix_syntax_errors(file_path):
                fixed_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {file_path}: {e}")
    
    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} —Ñ–∞–π–ª–æ–≤!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
    try:
        import app.core.exceptions
        import app.db.session
        import app.orders.services.order_service
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")


if __name__ == "__main__":
    main() 