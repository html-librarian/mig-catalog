"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import os


def test_python_basics():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Python"""
    assert 1 + 1 == 2
    assert "hello" + " " + "world" == "hello world"
    assert len([1, 2, 3]) == 3
    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ Python —Ä–∞–±–æ—Ç–∞—é—Ç")


def test_environment_variables():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    os.environ["ENVIRONMENT"] = "testing"
    os.environ["DEBUG"] = "True"
    os.environ["SECRET_KEY"] = (
        "test-secret-key-64-characters-long-for-testing-purposes-only-"
        "123456789"
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö
    assert os.getenv("ENVIRONMENT") == "testing"
    assert os.getenv("DEBUG") == "True"
    assert len(os.getenv("SECRET_KEY", "")) >= 64
    print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")


def test_file_system():
    """–¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    current_dir = os.getcwd()
    assert os.path.exists(current_dir)
    assert os.path.isdir(current_dir)
    print("‚úÖ –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")


def test_imports():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤"""
    try:
        print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏ Python –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        raise


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    test_python_basics()
    test_environment_variables()
    test_file_system()
    test_imports()
    print("‚úÖ –í—Å–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
